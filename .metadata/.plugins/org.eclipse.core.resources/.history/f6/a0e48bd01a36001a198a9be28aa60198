package user;

import model.Bateau;
import model.EBateau;
import model.Vehicule;
import model.Velo;
import model.Voiture;

public class Test {

	public static void main(String[] args) {
		test6();
	}
	
	static void test6() {
	Vehicule v1 = new Vehicule("ORNI", 0);
	Velo v2 = new Velo("Ciraptor", 550);
	Voiture v3 = new Voiture("K2000", 40000);

	Bateau v4 = new Bateau("Caravelle", 2000, EBateau.grand);
	
	static void testAvancer (véhicule v){
		System.out.println(v.avancer());
	}
	
	}
	static void test5() {
		Voiture v1 = new Voiture("K2000", 40000);
		// vehicule v2= v1; //le caste implicite
		Vehicule v2 = v1;
		// velo v3=(velo) v2
		System.out.println(v1);

	}

	static void test4() {
		Vehicule vehicule = new Vehicule("ORNI", 0);
		// Vehicule vehiculev2 = new Vehicule("aaa", 10);// Vehicule =mere donc
		// son constructeur est l objet et la on perd de visibilité
		Object vehiculev2 = new Vehicule("aaa", 10); //
		System.out.println(vehiculev2.toString());// par contre le toString est
													// fixé a celui de l
													// instance crée
		Object bateau = new Bateau("Caravelle", 2000, EBateau.grand);
		System.out.println(bateau);
	}

	static void test3() {
		// creation des instances
		Velo velo = new Velo("Ciraptor", 550);
		Voiture voiture = new Voiture("K2000", 40000);
		Vehicule vehicule = new Vehicule("ORNI", 0);
		Bateau bateau = new Bateau("Caravelle", 2000, EBateau.grand);
		Vehicule tab[] = { velo, voiture, vehicule, bateau };
		for (Vehicule v : tab)
			System.out.println(v.avancer());

	}

	static void test2() {
		// creation des instances

		Voiture voiture1 = new Voiture("K2000", 40000);// instance hybride
		Vehicule voiture2 = new Voiture("K2000", 40000);// on a changer voiture
														// par vehicule
		// instance hybride on gagne en genericité et on pert en visibilité, on
		// restreint les methodes à celle de la mere
		// kan on fait .methode la methode ne s affiche pas automatiquement mais
		// ce ki fixe l execution c est la fille cas suivant velo
		Velo velov1 = new Velo("Ciraptor", 550);
		Vehicule velo2 = new Velo("Ciraptor", 550);
		System.out.println(velo2.avancer());

	}

	static void test1() {
		// creation des instances
		Velo velo = new Velo("Ciraptor", 550);
		Voiture voiture = new Voiture("K2000", 40000);
		Vehicule vehicule = new Vehicule("ORNI", 0);
		Bateau bateau = new Bateau("Caravelle", 2000, EBateau.grand);

		// Test avancer() et toString()
		System.out.println("Vélo : " + velo + "\t" + velo.avancer());
		System.out.println(voiture + "\t" + voiture.avancer());
		System.out.println(vehicule + "\t" + vehicule.avancer());
		System.out.println(bateau + "\t" + bateau.avancer());

		// test gpsOnOff()
		voiture.gpsOnOff();
		System.out.println("\n" + voiture);

	}

}
